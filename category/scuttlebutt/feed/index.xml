<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>scuttlebutt &#8211; A Decentralized World</title>
	<atom:link href="/category/scuttlebutt/feed/" rel="self" type="application/rss+xml" />
	<link>/</link>
	<description>Building a Peer to Peer world that Unleashes Human Creativity</description>
	<lastBuildDate>Tue, 07 Apr 2020 06:45:45 +0000</lastBuildDate>
	<language>en-US</language>
	<sy:updatePeriod>
	hourly	</sy:updatePeriod>
	<sy:updateFrequency>
	1	</sy:updateFrequency>
	<generator>https://wordpress.org/?v=6.1.1</generator>
	<item>
		<title>StudyTime &#8211; A Decentralized MOOC Platform</title>
		<link>/2020/03/studytime-a-decentralized-mooc-platform/</link>
					<comments>/2020/03/studytime-a-decentralized-mooc-platform/#comments</comments>
		
		<dc:creator><![CDATA[Tom Decent]]></dc:creator>
		<pubDate>Mon, 23 Mar 2020 04:16:55 +0000</pubDate>
				<category><![CDATA[scuttlebutt]]></category>
		<category><![CDATA[class central]]></category>
		<category><![CDATA[coursera]]></category>
		<category><![CDATA[ssb]]></category>
		<category><![CDATA[study time]]></category>
		<category><![CDATA[studytime]]></category>
		<guid isPermaLink="false">/?p=51</guid>

					<description><![CDATA[In 2016, Coursera, one of the leading providers of massive open online courses (MOOC), decided to remove several less popular courses from their site because they weren&#8217;t profitable enough to maintain. One of my core beliefs is education should be open and free; anyone that has the passion to learn should be able to regardless of [&#8230;]]]></description>
										<content:encoded><![CDATA[
<p>In 2016, <a href="https://www.coursera.org/">Coursera</a>, one of the leading providers of massive open online courses (MOOC), <a href="https://www.classcentral.com/report/coursera-old-platform-shutdown-download-courses/">decided to remove several less popular courses from their site</a> because they weren&#8217;t profitable enough to maintain. One of my core beliefs is education should be open and free; anyone that has the passion to learn should be able to regardless of their income, background or location. Unfortunately, when education meets capitalism, those with capital decide what courses live and die while those with a passion for learning miss out.</p>



<p>When Coursera announced they were taking these courses offline I started looking around for a MOOC platform that would host them instead. While many of these courses found their way onto <a href="http://academictorrents.com/">academictorrents.com</a>, and other less legitimate places, these are zips of individual PDF&#8217;s and videos, not all-encompassing experiences like Coursera&#8217;s classes. </p>



<p>Instead of a centralized service that can increase prices or delete courses at any time, what if we built a decentralized app that anyone can use to explore license-free MOOC&#8217;s? They&#8217;d never have to worry about a course being taken down or censored, because it can be streamed from anyone else on the network. </p>



<p>Let&#8217;s explore the design of a hypothetical application &#8211; StudyTime &#8211; to illustrate this idea. This is a design document for an application that doesn&#8217;t yet exist, but is possible to build. </p>



<h2><strong>StudyTime Design Document</strong></h2>



<p>StudyTime is an application for viewing and interacting with MOOC&#8217;s that runs on Secure Scuttlebutt (SSB). It works by streaming all metadata for courses from the SSB network via SSB Feeds. All non-text content is loaded via SSB blobs, though it can also be made available on other distributed systems such as Sia or Torrents. Because all data is stored locally and mirrored to other clients, the network is self-sustaining as long as it has users. </p>



<p>The application creates its own private SSB key and feed upon first load. Anything that needs to be persisted, such as enrolled courses, course progress, personal notes, friends, etc., is stored in this feed. More interaction between students, such as forums or comparing results between a class, could be added over time using the same back-end and user feeds. Implementing these features would require a lot of thought around moderation and handling spam or trolls and, as such, is out of scope for this design. </p>



<h3><strong>User Interface</strong></h3>



<p>Upon opening StudyTime you are presented with a list of possible subjects to choose from, grouped into major categories with the most popular subjects given higher priority. This could look similar to the homepage for <a href="https://www.classcentral.com/">Class Central</a>:</p>



<figure class="wp-block-image size-large"><img decoding="async" width="1024" height="533" src="/wp-content/uploads/2020/03/studytime-select-subject-1024x533.png" alt="" class="wp-image-55" srcset="/wp-content/uploads/2020/03/studytime-select-subject-1024x533.png 1024w, /wp-content/uploads/2020/03/studytime-select-subject-300x156.png 300w, /wp-content/uploads/2020/03/studytime-select-subject-768x400.png 768w, /wp-content/uploads/2020/03/studytime-select-subject-1200x625.png 1200w, /wp-content/uploads/2020/03/studytime-select-subject.png 1289w" sizes="(max-width: 1024px) 100vw, 1024px" /><figcaption>Screenshot from Class Central Homepage &#8211; select subject section. </figcaption></figure>



<p>After selecting a category you&#8217;re taken to a search page where you can explore all courses tagged with this category. All searching and filtering is done client side. </p>



<figure class="wp-block-image size-large"><img decoding="async" width="1024" height="652" src="/wp-content/uploads/2020/03/studytime-select-course-1024x652.png" alt="" class="wp-image-56" srcset="/wp-content/uploads/2020/03/studytime-select-course-1024x652.png 1024w, /wp-content/uploads/2020/03/studytime-select-course-300x191.png 300w, /wp-content/uploads/2020/03/studytime-select-course-768x489.png 768w, /wp-content/uploads/2020/03/studytime-select-course-1200x764.png 1200w, /wp-content/uploads/2020/03/studytime-select-course.png 1277w" sizes="(max-width: 1024px) 100vw, 1024px" /><figcaption>Screenshot from Class Central &#8211; Select Course page</figcaption></figure>



<p>When selecting a course, you&#8217;re taken to a course overview page that consists of the course description, estimated duration, a button to start that course, etc.. <br></p>



<figure class="wp-block-image size-large"><img decoding="async" width="1024" height="638" src="/wp-content/uploads/2020/03/studytime-machine-learning-course-1024x638.png" alt="" class="wp-image-57" srcset="/wp-content/uploads/2020/03/studytime-machine-learning-course-1024x638.png 1024w, /wp-content/uploads/2020/03/studytime-machine-learning-course-300x187.png 300w, /wp-content/uploads/2020/03/studytime-machine-learning-course-768x478.png 768w, /wp-content/uploads/2020/03/studytime-machine-learning-course-1200x747.png 1200w, /wp-content/uploads/2020/03/studytime-machine-learning-course.png 1230w" sizes="(max-width: 1024px) 100vw, 1024px" /><figcaption>Screenshot from Class Central &#8211; Course Overview page</figcaption></figure>



<p>Most of this front-end design can be based off existing MOOC sites. It&#8217;s the back-end of this application that is really interesting. </p>



<h3><strong>Back-end Implementation</strong></h3>



<p>First, there is one or more course list feeds. Each course in the feed has the type <code>studytime_course</code>. Each course item includes a name, description, keywords, and feed ID. One course list feed ID is hard-coded into the application and is downloaded or updated upon opening the application. Because the course list feed is the primary data source and only one person can add items to the feed, having a hard coded feed creates centralization. The application should not be centralized in any way, so to fix this users will be able to change the course list feed to one created by someone else. Users can load multiple course list feeds (perhaps MOOC providers could release their own StudyTime feeds), and the application will load the courses listed in each. If a course exists in multiple feeds it will be de-duplicated by feed_id and the metadata for the first version found will be displayed in the app. </p>



<p>Here&#8217;s what an item in a course list feed looks like:</p>



<pre class="wp-block-code"><code>{
    author: '@masterfeed.ed25519',
    content: {
        type: 'studytime_course',
        name: 'Python Essentials',
        image: '%c7ZAvQRoEP/zXnXgTnkGafP1JSEV29V8G/+Hhk8lSWU=.sha256', 
        description: '',
        keywords: &#91;'python', 'beginners programming', 'computer science'],
        feed_id: 'Pyth0NEsential5.ed25519' // Scuttlebutt feed containing the course's lessons, videos, etc
    }
}</code></pre>



<p>While the user is browsing, StudyTime downloads the course feeds in the background, so there is little delay when opening a course. The courses will be grouped into categories client-side. Users can search, sort, and filter client-side using the name, description and keywords. </p>



<p>Each course has its own feed, where the author_id is the feed_id in the master feed. Each course feed contains the course content; the lessons and tests it contains, as well as hashes of all the images and videos in the course. When you view an image or video, StudyTime will request it from the SSB network then stream it from other peers who have a local copy. After an image or video is downloaded, the client will automatically share it with other peers to keep the network highly available. Here&#8217;s what a course feed looks like:</p>



<pre class="wp-block-code"><code>&#91;{
    author: '@Pyth0NEsential5.ed25519',
    content: {
        type: 'studytime_course_lesson',
        lesson_number: 1,
        name: 'Week 1 - How to install python',
        description: 'This lesson will teach you how to setup Python on your PC',
        lesson_content: 'In this lesson we will learn about installing python...'
    }
},
{
    author: '@Pyth0NEsential5.ed25519',
    content: {
        type: 'studytime_course_lesson_video,
        lesson_number: 1
        name: 'Week 1 Video 1',
        description: 'How to install Python',
        sources: &#91;
            '%c7ZAvQXoRP/zXnXgTnkGatP1JSAV29V8G/+Hhk8lSWU=.sha256',
            'https://siasky.net/AABAC_3Dt0FJsxqsu_J4TodEETCGvtFf1Uys_3EgzO0Tcg',
            'magnet:?xt=urn:btih:a3dced3979cc1a30cc7f648673ced688ce78ce77&amp;dn=studytime-python-essentials'
        ]
    }
},
{
    author: '@Pyth0NEsential5.ed25519',
    content: {
        type: 'studytime_course_lesson',
        lesson_number: 2,
        name: 'Week 2 - Hello World',
        description: 'This lesson will teach you the basics of python programming',
        lesson_content: 'First lets run ipython with the following command:\n`ipython`...'
    }
}]</code></pre>



<p>The front-end uses these feeds to render the course contents and lesson pages, downloading required non-text content as users progress. It pre-fetches all course content in the background after starting a course, so users don&#8217;t have to pause at the beginning of each lesson. While browsing through courses, users can navigate quickly as the application is only rendering local data from the feeds.</p>



<h3><strong>Updating and Improving Courses</strong></h3>



<p>Over time courses may become out-of-date and need to be improved, edited or deprecated. SSB feeds are immutable append-only feeds, so the only way to make changes is via adding messages. A message type <code>studytime_course_update</code> is used to make these updates. Here&#8217;s an example of how the Python Essentials course above can be updated:</p>



<pre class="wp-block-code"><code>{
    author: '@masterfeed.ed25519',
    content: {
        type: 'studytime_course_update',
        feed_id: 'Pyth0NEsential5.ed25519'
        name: 'Python 2.7 Essentials',
        keywords: &#91;],
        deprecated: true,
    }
}</code></pre>



<p>This update renames the course to Python 2.7 Essentials, and sets a deprecated flag. StudyTime hides all deprecated courses by default, but could have a &#8220;Show Deprecated&#8221; option for users that want to see them.</p>



<p>Similarly, course lessons can be updated with a <code>studytime_course_lesson_update</code> message, which contains a new name, description or lesson_content. The lessons will use the latest content when rendering. </p>



<h3><strong>Why build this on Scuttlebutt?</strong></h3>



<p>Scuttlebutt has a few advantages over building a traditional application with servers:</p>



<ul><li>The creator doesn&#8217;t need to raise money or take down &#8220;unprofitable&#8221; content to keep the application running, because the community runs it with their collective computing and networking power. </li><li>Provided there are enough users, the application should never go offline, as users are constantly sharing feed data with each other.  Because the content is being mirrored so many times, you will always be able to find a feed. Exceptions include images and video, which are harder to keep constantly mirrored, as they are only downloaded by the people that take a course. As a remedy, these images and videos could be mirrored to a service such as Sia or even S3 as a fallback. </li><li>Content cannot be censored or deleted by authorities.</li></ul>



<p>These rules apply to any decentralized application built on Scuttlebutt. I am particularly excited about the first, because there are so many free websites I&#8217;ve loved that have closed down over the years simply due to lack of money. If the community supported them with bandwidth and computing power instead, they would last as long as they still have fans. </p>



<h3><strong>What are the drawbacks of using Scuttlebutt?</strong></h3>



<p>The downsides to using Scuttlebutt rather than centralized servers are mostly constrained to the initial release of the application:</p>



<ul><li>If there are very few users online it may take a while to find and stream lesson content.</li><li>The developers of StudyTime may need to mirror most of the content until at least a few people have taken every course and are actively seeding the content. </li><li>SSB feeds cannot be changed, so there is no way to remove content once it&#8217;s been added. While it can be marked as deprecated/deleted so the application can hide it client-side, users will always have the information. </li></ul>



<p>I hope someone either takes this idea and runs with it or becomes inspired by the potential this network brings. There are so many similar problems in many industries that could be saved with a decentralized back-end like Scuttlebutt. </p>
]]></content:encoded>
					
					<wfw:commentRss>/2020/03/studytime-a-decentralized-mooc-platform/feed/</wfw:commentRss>
			<slash:comments>1</slash:comments>
		
		
			</item>
		<item>
		<title>A Decentralized Platform for Innovation</title>
		<link>/2020/03/a-decentralized-platform-for-innovation/</link>
					<comments>/2020/03/a-decentralized-platform-for-innovation/#respond</comments>
		
		<dc:creator><![CDATA[Tom Decent]]></dc:creator>
		<pubDate>Thu, 19 Mar 2020 03:10:53 +0000</pubDate>
				<category><![CDATA[scuttlebutt]]></category>
		<category><![CDATA[application platform]]></category>
		<category><![CDATA[developers]]></category>
		<category><![CDATA[manyverse]]></category>
		<category><![CDATA[patchfox]]></category>
		<category><![CDATA[patchwork]]></category>
		<category><![CDATA[ssb-chess]]></category>
		<guid isPermaLink="false">/?p=28</guid>

					<description><![CDATA[In what is scuttlebutt I discussed why Scuttlebutt can be a better social network than anything else out there. However, it can be so much more. It can be a decentralized platform that any application can be built on top of and immediately become peer-to-peer. Under the hood, Scuttlebutt messages are just JSON data. Here&#8217;s [&#8230;]]]></description>
										<content:encoded><![CDATA[
<p> In <a href="/2020/03/what-is-scuttlebutt/">what is scuttlebutt</a> I discussed why Scuttlebutt can be a better social network than anything else out there. However, it can be so much more. It can be a decentralized platform that any application can be built on top of and immediately become peer-to-peer.</p>



<p>Under the hood, Scuttlebutt messages are just JSON data. Here&#8217;s what a normal text post looks like (simplified, additional metadata omitted for clarity):</p>



<pre class="wp-block-code"><code>{
    author: '@Py8stqMfjhdc4Ln92R4Lg+3jITszP94G3P5BNuH+lWY=.ed25519',
    content: {
        type: 'post',
        channel: 'new-people',
        text: 'Hello World!'
    }
}</code></pre>



<p>And here&#8217;s what a vote looks like:</p>



<pre class="wp-block-code"><code>{
    author: '@Py8stqMfjhdc4Ln92R4Lg+3jITszP94G3P5BNuH+lWY=.ed25519',
    content: {
        type: 'vote',
        vote: {
            link: '%c7ZAvQXoDP/zXnXgTnkGatP1JSAV29V8G/+Hhk8lSWU=.sha256',
            value: 1,
            expression: 'Like'
        }
    }
}</code></pre>



<p>Notice how the content sections of the post and vote are different? The only thing that is similar is the &#8220;type&#8221;, meaning the content section can be filled with anything you like. Different applications can send their own messages with their own &#8216;type&#8217; and information, and clients that understand that type can display the information in a way that makes sense. </p>



<p>For example, you could build a chess application which sends content like:</p>



<pre class="wp-block-code"><code>{
    author: '@Py8stqMfjhdc4Ln92R4Lg+3jITszP94G3P5BNuH+lWY=.ed25519',
    content: {
        type: 'chess_move',
        game: '%c7ZAvQXoRP/zXnXgTnkGatP1JSAV29V8G/+Hhk8lSWU=.sha256',
        move: 'Qe4'
    }
}</code></pre>



<p>This data is then sent along the Scuttlebutt network where any of your friends who have a chess client that can read the type &#8220;chess_move&#8221; can see that you&#8217;ve made the move &#8220;Qe4&#8221; which in <a href="https://en.wikipedia.org/wiki/Portable_Game_Notation">Portable Game Notation</a> means you moved a queen to e4. You could even play games of chess with people with other chess applications, as long as they can process this &#8220;chess_move&#8221; type. In fact someone has already built a <a href="https://github.com/happy0/ssb-chess-db">ssb-chess backend</a> that runs on Scuttlebutt and you can <a href="https://github.com/happy0/ssb-chess-mithril">play it today</a>. </p>



<p>Because everything is open source and you don&#8217;t need permission to join the network, you&#8217;re free to innovate as your heart desires. You can build any kind of application using Scuttlebutt as a network layer, and it&#8217;ll be decentralized and usable by anyone else on the network right out of the box. </p>



<p>For instance, someone could build an Instagram-like application that connects to Scuttlebutt, and shows all content of type &#8216;image&#8217;. Someone else could build a Twitter-like application that only displays text posts of less than 280 characters. These applications will talk on the same network as Patchwork, Manyverse, Patchfox, etc., and you can interact with friends using different applications seamlessly. </p>



<p>This means that you are free to choose the social application you use while still being able to connect to your friends on the same network. What if the developers of Patchwork do something you hate, like add sponsored content, rearrange the feed order, or make it neon orange and green for a real 90&#8217;s flair? Instead of being forced to &#8220;deal with it&#8221; like you are with Facebook or Twitter, you can simply download an alternative application like <a href="https://www.manyver.se/">Manyverse</a> or <a href="http://patchfox.org/">Patchfox</a> and continue talking to all your friends with the same content. If you&#8217;re a programmer, you can even fork Patchwork, or create your own client from scratch just the way you like it. The application you use to view the world may constantly change, but the underlying data always remains the same. </p>



<p>This would allow Scuttlebutt to live on for decades or even centuries. Social clients may evolve and change over time just as they do now. People will build applications which will grow and die on it. But the underlying data remains the same, and you&#8217;ll never need to take your entire social world with you when switching clients again. </p>



<p>That&#8217;s what I love about the potential of Scuttlebutt. It&#8217;s not just freedom from corporate control, it&#8217;s freedom from anyone telling you what to do and how to interact with your friends. It&#8217;s freedom form the invisible hand nudging you to do things others want you to do, like clicking on ads or using their new live streaming product. </p>



<p>Remember AOL versus the Internet back in the 90&#8217;s? Initially everyone loved AOL as it was this beautiful walled garden that gave them news and information and games. But then the internet came along with infinite possibilities; a decentralized world where anyone can create and share and build what they like! It provided so much more utility and freedom that everyone flocked to it. That&#8217;s how I see Scuttlebutt today, the free alternative to the social media companies that only seem to be tightening their grip on their user-base, building a bigger wall around their garden every day.  </p>
]]></content:encoded>
					
					<wfw:commentRss>/2020/03/a-decentralized-platform-for-innovation/feed/</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
		<item>
		<title>What is Scuttlebutt?</title>
		<link>/2020/03/what-is-scuttlebutt/</link>
					<comments>/2020/03/what-is-scuttlebutt/#respond</comments>
		
		<dc:creator><![CDATA[Tom Decent]]></dc:creator>
		<pubDate>Wed, 18 Mar 2020 04:37:28 +0000</pubDate>
				<category><![CDATA[scuttlebutt]]></category>
		<category><![CDATA[patchwork]]></category>
		<guid isPermaLink="false">/?p=21</guid>

					<description><![CDATA[As mentioned in Why Decentralization, a big focus of this site is the technologies that will make a decentralized world possible. Scuttlebutt is one I&#8217;m most excited about because it has a usable social network, and more applications can be built on it for free, without permission, by anyone.&#160; Scuttlebutt solves multiple problems plaguing the [&#8230;]]]></description>
										<content:encoded><![CDATA[
<p> As mentioned in <a href="/2020/03/why-decentralization/">Why Decentralization</a>, a big focus of this site is the technologies that will make a decentralized world possible. <a href="https://scuttlebutt.nz/">Scuttlebutt </a>is one I&#8217;m most excited about because it has a usable social network, and more applications can be built on it for free, without permission, by anyone.&nbsp;</p>



<p>Scuttlebutt solves multiple problems plaguing the social networking world:</p>



<ul><li>One company having control over and access to everything people do and say on the network</li><li>AI algorithms sorting your timeline to decide what you should read, taking control away from you</li><li>Ads and the ability for companies to purchase attention, shoving themselves into your personal social timeline</li><li>That people have to have one profile tied to their real self&nbsp;</li></ul>



<p>Technically Scuttlebutt isn&#8217;t a social network, it&#8217;s a system for building any kind of decentralized application, but explaining it in the context of a social network helps. Later I&#8217;ll be explaining how it has the potential to be so much more than this.</p>



<h2><strong>Scuttlebutt &#8211; the social network</strong></h2>



<p>Decentralized, open-source social networks have been tried before, the two most well known are Diaspora and Mastadon. With these services there are still servers that people gather around, so if you want an account you have to find a server and register for it. There is still moderation, there is still federation (you have to register an account, and you can get banned) and there are a few central points of failure (the servers themselves). While these networks are a great first step away from centralized corporate-controlled networks (I like them and will be exploring them in more depth soon), Scuttlebutt is how I believe the social web should function in the future.&nbsp;&nbsp;</p>



<p>Scuttlebutt&#8217;s fundamental difference is it is fully decentralized. Scuttlebutt is completely peer to peer, meaning there are no central servers that you connect to, and no one manages or controls the network. You don&#8217;t use a website to view Scuttlebutt, instead you download a client to your computer. When you use a client, like <a href="https://github.com/ssbc/patchwork/">Patchwork</a>, it talks directly to your friends over the internet. When you make a post it gets sent to all your friends, so they have a local copy of it. If a friend comes online while you&#8217;re offline, their client will automatically download your post/s from your mutual friends. Messages can spread between people constantly without everyone always needing to be online, just like the real world.&nbsp;</p>



<figure class="wp-block-image size-large"><img decoding="async" width="1024" height="576" src="/wp-content/uploads/2020/03/patchwork-screenshot-1024x576.png" alt="Patchwork Screenshot" class="wp-image-23" srcset="/wp-content/uploads/2020/03/patchwork-screenshot-1024x576.png 1024w, /wp-content/uploads/2020/03/patchwork-screenshot-300x169.png 300w, /wp-content/uploads/2020/03/patchwork-screenshot-768x432.png 768w, /wp-content/uploads/2020/03/patchwork-screenshot-1536x864.png 1536w, /wp-content/uploads/2020/03/patchwork-screenshot-1200x675.png 1200w, /wp-content/uploads/2020/03/patchwork-screenshot.png 1919w" sizes="(max-width: 1024px) 100vw, 1024px" /><figcaption>Patchwork &#8211; A Scuttlebutt client</figcaption></figure>



<p>When you download Patchwork and run it on your PC it&#8217;s initially empty, because you don&#8217;t know anyone and don&#8217;t know how to connect to anyone. You&#8217;ll notice you only need to enter a name, picture and description, there is no signup form. Why? Because Scuttlebutt has no central service to register with. You can be anyone you like, and no one can tell you otherwise. Instead of having a registration service Scuttlebutt creates a private key on your computer. This key is used to prove you are who you say you are to your friends, so that no one can impersonate you, and it&#8217;s controlled by you alone.&nbsp;</p>



<p>To begin you should <a href="https://github.com/ssbc/ssb-server/wiki/Pub-Servers">connect to a &#8220;pub&#8221; with an invite code</a>. A &#8220;pub&#8221; is a super-friend on the Scuttlebutt network who makes friends with everyone. Pubs are just like normal users except that they&#8217;re almost always online, identify as pubs, and will friend you automatically when you redeem an invite code. After you redeem an invite you become friends and can start downloading information about its other friends, their friends, and those people&#8217;s friends (3 degrees of separation). These pub servers are mostly run by Scuttlebutt developers. Connecting to a pub doesn&#8217;t restrict your network in any way, as they are just super-friends, not central servers.&nbsp;</p>



<p>While connecting to a pub isn&#8217;t required, until you have a few friends it&#8217;s worthwhile friending one. For one, pubs are almost always online, so whenever you come online you get all the latest gossip, instead of having to wait for friends to login. Second, pubs can help you discover more people, as you can communicate with anyone up to 6 degrees of separation away (3 degrees in each direction), and pubs are connected to other pubs, so they connect you to the whole Scuttlebutt universe.</p>



<p>Once you&#8217;ve downloaded the local gossip from the pub, you&#8217;ll see you now have a social feed in Patchwork. This feed is comprised of everything your friends are up to (of which you have 1 right now, the pub) and everything their friends are up to (2 degrees out). Though your client has information about people 3 degrees out for network redundancy purposes, you don&#8217;t see them in your feed by default. You can see them under the &#8220;extended network&#8221; menu option in Patchwork. So now you are connected to all these random people, what do you do? First I&#8217;d recommend checking out some of the hashtags/topics which you can see on the left, and subscribe to some that you find interesting. Once you&#8217;re subscribed to some topics you&#8217;ll see every post from everyone you know about that includes that hashtag.</p>



<p>&nbsp;You can then follow others who have similar interests to you and post anything you like to the network. Have fun out there! If you want to follow me my ID is:  <code>@Py8stqMfjhdc4Ln92R4Lg+3jITszP94G3P5BNuH+lWY=.ed25519&nbsp; </code></p>
]]></content:encoded>
					
					<wfw:commentRss>/2020/03/what-is-scuttlebutt/feed/</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
	</channel>
</rss>
