<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>social web &#8211; A Decentralized World</title>
	<atom:link href="/tag/social-web/feed/" rel="self" type="application/rss+xml" />
	<link>/</link>
	<description>Building a Peer to Peer world that Unleashes Human Creativity</description>
	<lastBuildDate>Tue, 17 Aug 2021 02:02:33 +0000</lastBuildDate>
	<language>en-US</language>
	<sy:updatePeriod>
	hourly	</sy:updatePeriod>
	<sy:updateFrequency>
	1	</sy:updateFrequency>
	<generator>https://wordpress.org/?v=6.1.1</generator>
	<item>
		<title>A Trust and Moderation System for the Decentralized Web</title>
		<link>/2020/06/a-trust-and-moderation-system-for-the-decentralized-web/</link>
					<comments>/2020/06/a-trust-and-moderation-system-for-the-decentralized-web/#comments</comments>
		
		<dc:creator><![CDATA[Tom Decent]]></dc:creator>
		<pubDate>Wed, 10 Jun 2020 06:15:37 +0000</pubDate>
				<category><![CDATA[trust]]></category>
		<category><![CDATA[decentralization]]></category>
		<category><![CDATA[decentralized moderation]]></category>
		<category><![CDATA[decentralized trust]]></category>
		<category><![CDATA[moderation]]></category>
		<category><![CDATA[scuttlebutt]]></category>
		<category><![CDATA[social web]]></category>
		<guid isPermaLink="false">/?p=110</guid>

					<description><![CDATA[Public social networks, comment sections, and discussion forums are broken. The internet promised limitless access to knowledge and thoughtful, intelligent conversations with people from all over the world. Instead, we have trolls, manipulators, outrage, and spam.&#160; It might seem like decentralization would make these problems worse. After all, most decentralized or unmoderated social networks turn [&#8230;]]]></description>
										<content:encoded><![CDATA[




<p>Public social networks, comment sections, and discussion forums are broken. The internet promised limitless access to knowledge and thoughtful, intelligent conversations with people from all over the world. Instead, we have trolls, manipulators, outrage, and spam.&nbsp;</p>



<p>It might seem like decentralization would make these problems worse. After all, most decentralized or unmoderated social networks turn into dumpster fires of low quality content over time. Without moderators or the threat of being banned, the worst users feel emboldened to spread their drivel across the entire network. As quality degrades, the best users are turned off and the network becomes less useful and engaging.&nbsp;</p>



<p>But there is a solution that gives power back to the people, allowing them to moderate their own world, working with friends to keep it free from low thought discourse. It works by mirroring the real world: give everyone a reputation and the ability to ignore those with a poor reputation.&nbsp;</p>



<p>In this article I&#8217;m going to show not only how a decentralized moderation system can be as good as existing systems, but also surpass them, creating a higher quality social network.</p>



<p>But first, let&#8217;s take a step back and see what centralized moderation gets wrong.</p>



<h3><strong>Centralized Moderation and its flaws</strong></h3>



<p>Centralized moderation refers to social networks or forums where one central entity, such as a corporation or the owner of the site, has sole moderation authority over the contents. There is usually one set of rules that all users must follow and if skirted the user’s content is deleted and repeat offenders are banned.&nbsp;</p>



<p>The flaws center around content that some users enjoy and others do not and how you deal with that content.&nbsp;</p>



<p>With centralized moderation we all have to play by the same rules, so sites have to do the best job they can. If they are overly harsh in moderating they&#8217;ll have a good signal-to-noise ratio, but the content may become overly partisan or boring. If they&#8217;re too lenient the content will get noisier which makes it less enjoyable as there are then more low effort posts to sort through. And some of the worst content will turn many people off.&nbsp;&nbsp;</p>



<h4><strong>Content Spectra</strong></h4>



<p>Imagine rating every piece of social media content along a content spectra of the following:</p>



<ul><li>Low Quality → High Quality</li><li>Low Offense →High Offense</li><li>Accurate → Inaccurate</li></ul>



<p>Consider where the content you enjoy most fits on these spectra. It’s likely not a fixed point, but rather a range of what is considered acceptable and a smaller range of what is considered ideal. </p>



<p>The worst content generally lies at the extreme of these spectra. Spam is extremely low quality, Haters are High Offense, and Manipulators are Frequently Inaccurate.&nbsp;</p>



<p>So, a site has a good signal-to-noise ratio when a good percent of the content falls into one’s ideal zone.&nbsp;</p>



<p>Users want to see content that falls into their ideal zone, rather than have to hear everyone’s opinion. If too much falls outside their ideal zone they&#8217;ll often become bored and leave the site.</p>



<p>Sometimes heavy moderation of content that falls outside of one’s “ideal zone” is a good thing, because it means you&#8217;ll enjoy the content you read more, without having to wade through purely acceptable content.</p>



<p>The central flaw of centralized networks is that by having a set of rules that all users must abide by, sites are presetting the allowable content spectra. This content spectra not only decides the kind of users that will be allowed on the site, but also those attracted to the site, because the users whose content spectra more closely match the website will tend to stick around more.</p>



<p>It turns out centralized services have thought about this problem over the past decade and have come up with a solution: algorithmically determined feeds. If everyone has their own feed, an AI algorithm can learn what one’s ideal content spectra is and show the content that most appeals to them. This feed is a filter on the world that helps one view the site in a curated “ideal” light.</p>



<p>Algorithmically determined feeds are the next stage in the evolution of social networks, but these feeds have their own set of problems.</p>



<h4><strong>The Algorithmically Chosen Feed Problem</strong></h4>



<p>Having a social feed driven by an algorithm can be useful for surfacing all the content you&#8217;d like to see most on a social network, but it also has dark sides that most rarely think about.&nbsp;</p>



<p>The biggest problem with utilizing algorithms to customize social feeds is that the user has no insight into the decisions the algorithm makes. With the rise of neural networks, at times even the developers of these algorithms are unable to explain their internal logic.</p>



<p>When a post is made, even one into which a lot of time and effort has been put, the algorithm may decide that it&#8217;s low quality, rank it lowly, and cause it to never appear in friends’ algorithmically chosen feeds. Under this paradigm, neither a user nor their friends’ opinions matter, the algorithm has decided and its decision is final.&nbsp;</p>



<p>Furthermore, because these algorithms are applied to millions or even billions of people, there is a large financial incentive for manipulative companies or organizations to reverse engineer them. If they can figure out how these algorithms work, companies can tailor the algorithms to prioritize their own content to reach the top of as many feeds as possible. This becomes worse if the social network’s financial incentives are aligned with the company’s. Even if the social media network itself is completely benevolent, this will always be an issue.&nbsp;</p>



<p>One final flaw of these algorithms is the incentive for social networks to keep you hooked on their product. This means that the algorithms are optimized to display content you like and hide the content you don&#8217;t like. Though useful in moderation, this can quickly turn dangerous if optimized for dopamine hits and short term emotional appeal over mental health and well-being.&nbsp;</p>



<h4><strong>Who chose the moderators?</strong></h4>



<p>Centralized moderation has a fundamental, rarely discussed, issue: The idea that a third party is needed to moderate user’s content.&nbsp;</p>



<p>Why can&#8217;t we decide that for ourselves? Why do we have to be subject to the whims of covert moderators and opaque algorithms that decide who is allowed and what content is acceptable?</p>



<p>Decentralized worlds do not have to be structured in this way. Decentralized networks have the potential to fulfill the original intent of the internet: worlds open to everyone without global rulers in which everyone is able to participate and moderate their own domain. Users choose who to trust, who to ignore, and how one’s feed is ordered.&nbsp;</p>



<h3><strong>The Solution: A Decentralized Moderation System that scales to everyone</strong></h3>



<p>To have the best social experience possible, moderation must be personalized. Individuals must be able to decide who can be a part of their world and who cannot. It&#8217;s not possible for any company to make policies that millions approve of and that do not have downsides and unintended consequences.</p>



<p>This doesn&#8217;t mean that global moderators are no longer necessary. They are still incredibly useful, just no longer mandatory. Instead, moderators should be opt-in, leaving an individual, or group of individuals, to choose the moderator for one&#8217;s “world.”. This allows users to benefit from companies that specialize in detecting and eliminating spam, bot networks, or Astroturfing, without being forced to use them.&nbsp;</p>



<h4><strong>How it works</strong></h4>



<p>In real life trust comes from friends and family, the people someone already trusts to help determine who can and cannot be trusted. When a friend begins to associate with bad people one either tries to steer them away or one’s trust in them falls.&nbsp;</p>



<p>This is exactly how the new decentralized trust system works. A user rates the trustworthiness of some of the people encountered online, and then trust of everyone else is calculated based on these ratings. In this implementation the trust ratings must be public, so that everyone can calculate the trust of friends of friends. In the future a more private trust system could be developed along similar lines.&nbsp;</p>



<p>The second part is a filter that a user can apply to their social feed to hide everyone with a trust rating below a particular threshold.</p>



<p>Now this isn&#8217;t a finalized spec, it&#8217;s a rough outline of how this system can work. This essay is about why we should build this and how it could work, more than exact implementation details.&nbsp;&nbsp;</p>



<p>To bootstrap the system the user would first give a rating to the people they trust/distrust on the network. These might be people known in real life or not. Ratings can be between -100 and 100. This rating should be how much a user trusts them to post content that is similar to their ideal content spectra, because these ratings will shape the content seen on the social network.&nbsp;</p>



<p>When a user encounters new people online they can give them +/- 1 votes based on individual pieces of content posted. For obvious spammers or trolls one could immediately give them a negative rating.&nbsp;</p>



<p>So, while individual pieces of content can be rated the trust rating is given to a person. This is because most people post content in a similar content spectra. However, it is important that trust is also linked to content so that when a user asks the question &#8220;Hey, why does my friend distrust this guy?&#8221;, they could see the exact piece of content that caused the distrust.</p>



<p>After a few trust ratings have been given, the algorithm will go on to calculate the trustworthiness of friends of friends (two degrees of separation away) and even their friends (three degrees away). It does this by taking all the people a user trusts and all the people they trust, then multiplying the trust levels together to come up with one’s own personal trust rating of everyone else. Even if a user only rates ten people, then those ten go on to rate ten others and those rate ten others, this will result in the user having trust ratings for over 1000 people on the network.&nbsp;</p>



<p>When a trust rating is given it is fixed and not affected by the ratings of others. </p>



<p>The people a user distrusts have no effect on their trust rating of others. This is just like in real life, where when someone encounters someone they don’t like, they don&#8217;t care who their friends or enemies are. It also prevents malicious users from gaming the system. </p>



<p>Now instead of having to individually block spammers, trolls and haters from your world, as soon as a trusted friend rates someone poorly, they&#8217;ll be hidden automatically, making moderation of obvious trolls or spammers much easier.</p>



<h4><strong>The Algorithm</strong></h4>



<p>The general algorithm is: the trust rating of anyone who does not already have a set rating is the square root of how much a user trusts a mutual friend multiplied by how much the mutual friend trusts the stranger. In the case of negatives the negative is ignored when calculating the square root (so there&#8217;s no imaginary numbers). When a user has multiple mutual friends their scores are summed before the square root and that number is divided by total raters (so that someone who&#8217;s popular isn&#8217;t naturally more trusted).&nbsp;</p>



<p>There is a small flaw with this algorithm. If a user has a friend Alice that is rated at a ten, and then they have a best friend Bob that is rated at 100, the score for bob will be (10)(100)= 31.6.&nbsp;</p>



<p>This is weird because the user doesn&#8217;t trust Alice that much, so why would they trust Bob more than her? We can make an improvement to address this: the trust level is capped to how highly the mutual friend has been rated.Similarly to real life, if an acquaintance brings a friend to a party, it doesn&#8217;t matter how much they say they like them, they still will not be trusted higher than that acquaintance.</p>



<p>Here&#8217;s a demo to showcase this system in action, with randomly generated users that randomly trust other users are random levels:</p>



<link rel="stylesheet" href="/wp-content/uploads/decentralized-trust-demo/style.css" type="text/css">
<link href="https://cdn.syncfusion.com/ej2/material.css" rel="stylesheet">
<div id="trust-demo"></div>
<div id="trust-controls">
    <div id="users-control" class="control-group">
        <div class="label">Total Users</div>
        <div id="users-slider" class="slider"></div>
    </div>
    <div id="edges-control" class="control-group">
        <div class="label">AVG Ratings<br>Per User</div>
        <div id="edges-slider" class="slider"></div>
    </div>
    <div id="trust-depth-control" class="control-group">
        <div class="label">Trust Depth</div>
        <div id="trust-depth-slider" class="slider"></div>
    </div>
</div>
<script type="text/javascript" src="/wp-content/uploads/decentralized-trust-demo/main.js"></script>



<p>You can adjust the total users and average ratings per user to see how the system works as more people join in and use it. You can also adjust the depth, or degrees of separation, that the trust ratings are calculated for. </p>



<p>The arrows represent how much each user trusts the user the arrow is pointing to. The color of each user represents how much they are trusted by the selected user (the blue one), calculated via the algorithm described in this post. Bright green represents 100 trust and bright red -100 trust, with a gradient for scores in between.</p>



<p>The source code for this demo is <a href="https://github.com/adecentworld/decentralized-trust-demo" target="_blank" rel="noreferrer noopener">open source on Github</a>. I&#8217;ve implemented a simple version of the trust algorithm in JavaScript which you can use for your own social network if you wish and it&#8217;s already fast enough for most use cases. </p>



<h4><strong>Technical Implementation</strong></h4>



<p>This can be implemented on top of <a rel="noreferrer noopener" href="/2020/03/what-is-scuttlebutt/" target="_blank">Scuttlebutt</a>, or any other open source social network. With Scuttlebutt the only requirement is a trust plugin which allows users to post trust-rating messages that contain a user/feed ID and their rating of that user. With that information, the algorithm can calculate the trust rating of all users based on the trust-rating messages everyone has posted.&nbsp;</p>



<p>In regards to user experience, this plugin could add upvote/downvote buttons to each piece of content that increases or decreases trust in the user that posted that content. The trust filter can be a simple drop-down in the top right of the feed that, when a trust level is chosen, all posts by users with a trust rating below that level will be hidden.&nbsp;</p>



<p>In terms of performance, the demo above utilizes a simple algorithm in JavaScript, and even this is able to re-calculate the trust of 100,000+ people in just a few milliseconds. <a rel="noreferrer noopener" href="https://github.com/adecentralizedworld/decentralized-trust-demo#benchmarks" target="_blank">You can see the benchmarks here.</a></p>



<p>This can scale to hundreds of millions of users because each user only needs to calculate the ratings of a few hundred to tens of thousands of people. Because it&#8217;s open source this algorithm can be updated and improved over time if better ways of calculating trust are discovered. A written text example of this algorithm is in Appendix A.</p>



<h3><strong>Additional Benefits of Decentralized Trust</strong></h3>



<h4><strong>Choose your own moderators</strong></h4>



<p>It&#8217;s still a good idea to have large organizations become moderators, because they have more resources and clout than individuals. The difference is, in a decentralized world, one can choose their own moderators. Imagine a future where the New York Times has their own &#8220;Trust Beacon&#8221; user on the platform. Whenever they report on fake news or fake content , this trust beacon can mark the content and those who post/create it at say -10 trust.&nbsp;</p>



<p>If a user trusts the New York Times, they can rate it at say 50 trust, and it will apply it&#8217;s trust ratings to&nbsp; their social feed automatically. It&#8217;s the same as trusting any other user.&nbsp;</p>



<p>These trust beacons could be set up by any media companies, fake news catching websites, or even companies like NetNanny that want to filter out content unsafe for kids. People can trust anyone they like and then those trust ratings will be applied to their feed. This way a big network of friends is not needed to help filter content, these companies can do so if desired.</p>



<h4><strong>Trust can be linked to posts or images</strong></h4>



<p>This trust system doesn&#8217;t need to only apply to users. It can be applied to individual posts or pieces of content. For example, on Scuttlebutt every piece of media is stored as a blob, where the filename is a hash of it&#8217;s contents. This hash is essentially a fingerprint of image, video, song, etc. on the network.&nbsp;</p>



<p>A trust beacon such as Snopes that debunks false information can have an account that flags images that are false. Because that image can be identified across the network by its hash, if a user subscribes to the Snopes trust beacon it can automatically flag and filter this content for them even if that image was reposted 100 times before they saw it.&nbsp;</p>



<p>This could also be done with pornographic or violent content that&#8217;s unsafe for kids. Services such as NetNanny could maintain a list of these adult only images and videos and automatically block them for children, creating a safer space for them to explore than even the major networks can manage.&nbsp;</p>



<h4><strong>You choose what trust means to you</strong></h4>



<p>The interesting thing about this system is that a user doesn&#8217;t have to trust people based on truthfulness. Trust is an arbitrary number that can be used to represent anything one would like to see more of in your social world. If a user wants trust ratings to be based on shared beliefs, positivity, or even geographical proximity that&#8217;s up to them.&nbsp;</p>



<p>Imagine a world where instead of everyone having one social profile, they have one profile for every topic they’re interested in. One could have a profile for programming, for politics, for games, for decentralization, etc. If this becomes commonplace then one’s trust in someone can be directly related to their area of expertise. Trust is often not in the person but in one’s confidence that they know about whatever they&#8217;re talking about at the time.&nbsp;</p>



<p>Alternatively, it could be implemented in such a way that people have multiple trust ratings, each tagged by topic. However that would add a lot more complexity, especially around identifying what topic each post belongs to.&nbsp;</p>



<h4><strong>Creating Small Communities again</strong></h4>



<p>Most of the time friends are chosen through serendipity. <a href="https://legallysociable.com/2014/01/23/the-three-conditions-sociologists-say-are-crucial-for-friendship/" target="_blank" rel="noreferrer noopener">It&#8217;s been shown that the secret to a friendship blooming is multiple random encounters.</a> One reason people rarely make friends via major social networks (Twitter, Facebook, Reddit, etc.) is because they are so large and spread out people rarely encounter the same person twice if they&#8217;re not already friends.&nbsp;</p>



<p>Imagine if your social feed showed everyone you follow, as well as everyone they follow, with their rank based on trust ratings. You may discover some good friends of friends that you&#8217;ve never met posting content that you really like. Over time you could comment on their posts, contribute to the conversation, and, eventually, form a relationship.&nbsp;</p>



<p>The trust system would allow the best friends of friends to appear in user’s feed more often than a random crazy uncle, posts from groups, or even barely known acquaintances. This could lead to new connections and many amazing new friendships with people that were previously just out of contact. The more interests and people in common, the more users will see each other online and the more chances they’ll have to connect.</p>



<h4><strong>This is internet scale moderation</strong></h4>



<p>The future will be full of AIs and bots that create hundreds of thousands of accounts in order to take over social networks. With decentralized trust all it takes is one friend or trust beacon to notice these bots and distrust them. It needs to be possible to scale moderation to the level where it can combat thousands or even millions of fake users and bots. It can&#8217;t scale by having designated moderators, it can only scale if everyone participates in moderating some portion of the world.&nbsp;</p>



<h3><strong>Downsides of Decentralized Trust</strong></h3>



<p>Now there are potential downsides to this system. As with anything, when&nbsp; people are given freedom some people are going to use it poorly. That&#8217;s okay. People shouldn’t be told what to do anyway.</p>



<p>The first obvious issue is the creation of echo chambers or online cults, where instead of choosing truth and seeking the best information, people trust those who confirm their existing beliefs.</p>



<p>This can be somewhat mitigated with the ability to set a trust filter level to a low level, even in the negatives, to see posts and opinions one may not usually be exposed to. This again is up to the end user if they wish to expose themselves to differing opinions or not.&nbsp;</p>



<p>It is up to individuals to determine what&#8217;s best for them. Of course, one would hope they make good choices, but it is not society&#8217;s job to save people from themselves. It&#8217;s far better to have this freedom and the power to use or misuse it, than to allow companies to build the echo chamber behind closed doors.&nbsp;</p>



<h3><strong>Conclusion</strong></h3>



<p>The implementation will be open source and open to anyone to participate. Implementation has already begun, however there is a lot of work to do. If anyone has heard of anyone building something similar it would be wonderful to meet so this idea can be brought to fruition.</p>



<p>It&#8217;s exciting thinking about the possibilities this system would bring. There is potential for more stimulating conversation threads without trolls trying to ruin the fun. With the current state of the social internet this is hard, but it&#8217;s something worth doing.</p>



<h3><strong>Appendix A:</strong><br><strong>Trust system example</strong></h3>



<p>Lets walk through an example, starting with Tom.</p>



<ul><li>Tom has a best friend Alice, who he trusts at 100</li><li>Tom also has a friend Mike, who he trusts at 50</li><li>Alice knows a guy Dave, who&#8217;s a compulsive liar and trusts him at -20</li><li>Alice has a workmate Jeremy who&#8217;s an ok guy but she doesn&#8217;t know him well, so she trusts at 10.</li><li>Alice has a workmate Sophie, who constantly shares false outrage, but is otherwise a good person, who she trusts at -5.</li><li>Mike is best friends with Jeremy and trusts him 40</li><li>Mike knows Sophie and likes her, and trusts her 15</li><li>Dave has a best friend Barry, who he trusts 100</li><li>Sophie has a best friend Emily, who she trusts 100</li></ul>



<p>While Tom has only rated 3 people, the Trust Software will now calculate his personalized trust ratings for all 7 people here:</p>



<p>First there&#8217;s the immediate friends, if you&#8217;ve rated someone that is the fixed rating for them, it isn&#8217;t influenced by anyone else:</p>



<p><img decoding="async" src="/wp-content/ql-cache/quicklatex.com-21036ba1a9c1f3fe8bd6a685118763ba_l3.png" class="ql-img-inline-formula quicklatex-auto-format" alt="&#65;&#108;&#105;&#99;&#101;&#61;&#49;&#48;&#48;" title="Rendered by QuickLaTeX.com" height="14" width="92" style="vertical-align: -1px;"/></p>



<p><img decoding="async" src="/wp-content/ql-cache/quicklatex.com-7e821d0dcc4f62625077d75d58e1b794_l3.png" class="ql-img-inline-formula quicklatex-auto-format" alt="&#77;&#105;&#107;&#101;&#61;&#53;&#48;" title="Rendered by QuickLaTeX.com" height="13" width="85" style="vertical-align: 0px;"/></p>



<p>Then the secondary friends:</p>



<p><img decoding="async" src="/wp-content/ql-cache/quicklatex.com-af64db0a8bab515a9ce1a8424cec3ad7_l3.png" class="ql-img-inline-formula quicklatex-auto-format" alt="&#68;&#97;&#118;&#101;&#32;&#61;&#32;&#92;&#115;&#113;&#114;&#116;&#123;&#40;&#84;&#111;&#109;&#46;&#65;&#108;&#105;&#99;&#101;&#41;&#40;&#65;&#108;&#105;&#99;&#101;&#46;&#68;&#97;&#118;&#101;&#41;&#125;&#32;&#61;&#32;&#92;&#115;&#113;&#114;&#116;&#123;&#40;&#49;&#48;&#48;&#41;&#40;&#45;&#50;&#48;&#41;&#125;&#32;&#61;&#32;&#45;&#52;&#53;" title="Rendered by QuickLaTeX.com" height="22" width="463" style="vertical-align: -6px;"/></p>



<p><img decoding="async" src="/wp-content/ql-cache/quicklatex.com-4e247d89c18a0e0672336a19b058d5c4_l3.png" class="ql-img-inline-formula quicklatex-auto-format" alt="&#74;&#101;&#114;&#101;&#109;&#121;&#32;&#61;&#32;&#92;&#102;&#114;&#97;&#99;&#123;&#92;&#115;&#113;&#114;&#116;&#123;&#40;&#84;&#111;&#109;&#46;&#65;&#108;&#105;&#99;&#101;&#41;&#40;&#65;&#108;&#105;&#99;&#101;&#46;&#74;&#101;&#114;&#101;&#109;&#121;&#41;&#32;&#43;&#32;&#40;&#84;&#111;&#109;&#46;&#77;&#105;&#107;&#101;&#41;&#40;&#77;&#105;&#107;&#101;&#46;&#74;&#101;&#114;&#101;&#109;&#101;&#121;&#41;&#125;&#125;&#123;&#84;&#111;&#116;&#97;&#108;&#32;&#82;&#97;&#116;&#101;&#114;&#115;&#125;" title="Rendered by QuickLaTeX.com" height="30" width="459" style="vertical-align: -6px;"/></p>



<p><img decoding="async" src="/wp-content/ql-cache/quicklatex.com-02d2ed28b9174fe3ee54f9bd0e34a035_l3.png" class="ql-img-inline-formula quicklatex-auto-format" alt="&#61;&#32;&#92;&#102;&#114;&#97;&#99;&#123;&#92;&#115;&#113;&#114;&#116;&#123;&#40;&#49;&#48;&#48;&#41;&#40;&#49;&#48;&#41;&#32;&#43;&#32;&#40;&#53;&#48;&#41;&#40;&#52;&#48;&#41;&#125;&#125;&#123;&#50;&#125;&#32;&#61;&#32;&#50;&#55;&#46;&#53;" title="Rendered by QuickLaTeX.com" height="30" width="207" style="vertical-align: -6px;"/></p>



<p><img decoding="async" src="/wp-content/ql-cache/quicklatex.com-dec077d294cb36df6e8fa37445b9dba9_l3.png" class="ql-img-inline-formula quicklatex-auto-format" alt="&#83;&#111;&#112;&#104;&#105;&#101;&#32;&#61;&#32;&#92;&#102;&#114;&#97;&#99;&#123;&#92;&#115;&#113;&#114;&#116;&#123;&#40;&#84;&#111;&#109;&#46;&#65;&#108;&#105;&#99;&#101;&#41;&#40;&#65;&#108;&#105;&#99;&#101;&#46;&#83;&#111;&#112;&#104;&#105;&#101;&#41;&#32;&#43;&#32;&#40;&#84;&#111;&#109;&#46;&#77;&#105;&#107;&#101;&#41;&#40;&#77;&#105;&#107;&#101;&#46;&#83;&#111;&#112;&#104;&#105;&#101;&#41;&#125;&#125;&#123;&#84;&#111;&#116;&#97;&#108;&#32;&#82;&#97;&#116;&#101;&#114;&#115;&#125;" title="Rendered by QuickLaTeX.com" height="30" width="434" style="vertical-align: -6px;"/></p>



<p><img decoding="async" src="/wp-content/ql-cache/quicklatex.com-05aca958af7a224f3eff16b720c0bdd1_l3.png" class="ql-img-inline-formula quicklatex-auto-format" alt="&#61;&#32;&#92;&#102;&#114;&#97;&#99;&#123;&#92;&#115;&#113;&#114;&#116;&#123;&#40;&#49;&#48;&#48;&#41;&#40;&#45;&#53;&#41;&#32;&#43;&#32;&#40;&#53;&#48;&#41;&#40;&#49;&#53;&#41;&#125;&#125;&#123;&#50;&#125;&#32;&#61;&#32;&#56;" title="Rendered by QuickLaTeX.com" height="30" width="189" style="vertical-align: -6px;"/></p>



<p>Then the tertiary friends:</p>



<p>Barry is unrated as Tom.Dave &lt; 0</p>



<p><img decoding="async" src="/wp-content/ql-cache/quicklatex.com-b8e731b48a26152fc368e0c037a97608_l3.png" class="ql-img-inline-formula quicklatex-auto-format" alt="&#69;&#109;&#105;&#108;&#121;&#32;&#61;&#32;&#92;&#115;&#113;&#114;&#116;&#123;&#40;&#84;&#111;&#109;&#46;&#83;&#111;&#112;&#104;&#105;&#101;&#41;&#40;&#83;&#111;&#112;&#104;&#105;&#101;&#46;&#69;&#109;&#105;&#108;&#121;&#41;&#125;&#32;&#61;&#32;&#92;&#115;&#113;&#114;&#116;&#123;&#40;&#49;&#54;&#41;&#40;&#49;&#48;&#48;&#41;&#125;&#32;&#61;&#32;&#52;&#48;" title="Rendered by QuickLaTeX.com" height="22" width="480" style="vertical-align: -6px;"/></p>



<p><img decoding="async" src="/wp-content/ql-cache/quicklatex.com-285c089e2c5eea4ac3a0290fe04686c6_l3.png" class="ql-img-inline-formula quicklatex-auto-format" alt="&#61;&#32;&#92;&#109;&#105;&#110;&#123;&#40;&#84;&#111;&#109;&#46;&#83;&#111;&#112;&#104;&#105;&#101;&#44;&#32;&#84;&#111;&#109;&#46;&#69;&#109;&#105;&#108;&#121;&#41;&#125;&#32;&#61;&#32;&#92;&#109;&#105;&#110;&#123;&#40;&#49;&#54;&#44;&#52;&#48;&#41;&#125;&#32;&#61;&#32;&#49;&#54;" title="Rendered by QuickLaTeX.com" height="18" width="416" style="vertical-align: -4px;"/></p>



<p>There&#8217;s a few interesting things happening here. First, Sophie ends up with a slightly positive trust rating despite Tom&#8217;s best friend Alice saying she shares too much false outrage. This is because Mike still trusts her. If Tom notices that she does share a lot of false information he can either rate her himself which will mean his friends ratings no longer apply, or he can rate Mike lower because it&#8217;s becoming obvious Mike doesn&#8217;t care about truthfulness as much.</p>



<p>We also see that Barry&#8217;s rating is not calculated at all (so would default to 0). This is because if we don&#8217;t trust someone we also don&#8217;t trust anything they have to say about the reputation of others, so the system can&#8217;t be gamed by malicious actors.&nbsp; Similarly if Tom rated Sophie at a negative number then her rating of Emily would no longer apply and Emily would have the default rating of 0.</p>



<p>Lastly we see Emily&#8217;s rating is capped to the same rating as Tom.Sophie, because we never rate friends of friends higher than the mutual friend.</p>



<p>All the people above are now in a big discussion about politics and Tom can see this discussion happening in his feed. As Tom wants to be well informed without liars being involved he sets his trust filter level to 10, so everyone with less than 10 rating will be hidden. This allows Tom to filter his world without investing much effort in the process. In this feed he would only see posts from Alice, Mike, Jeremy and Emily. Posts from Sophie, Dave or Barry would be hidden.</p>
]]></content:encoded>
					
					<wfw:commentRss>/2020/06/a-trust-and-moderation-system-for-the-decentralized-web/feed/</wfw:commentRss>
			<slash:comments>5</slash:comments>
		
		
			</item>
	</channel>
</rss>
